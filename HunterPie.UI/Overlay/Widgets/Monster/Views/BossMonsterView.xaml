<UserControl x:Class="HunterPie.UI.Overlay.Widgets.Monster.Views.BossMonsterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.Views"
             mc:Ignorable="d" 
             xmlns:overlay="clr-namespace:HunterPie.UI.Overlay.Controls"
             xmlns:arch="clr-namespace:HunterPie.UI.Architecture"
             xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters"
             xmlns:assets="clr-namespace:HunterPie.UI.Architecture.Assets" 
             xmlns:viewmodels="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.ViewModels" 
             xmlns:animations="clr-namespace:HunterPie.UI.Architecture.Animation"
             xmlns:view="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.Views"
             xmlns:ocomponents="clr-namespace:HunterPie.UI.Overlay.Components"
             d:DataContext="{d:DesignInstance Type=viewmodels:BossMonsterViewModel}"
             d:DesignWidth="600">
    <UserControl.Resources>
        <converters:DoubleToDecimalConverter x:Key="DoubleToDecimalConverter"/>
        <converters:MonsterEmToIconConverter x:Key="MonsterEmToIconConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:CrownToIconConverter x:Key="CrownToIconConverter"/>
        <converters:CrownToVisibilityConverter x:Key="CrownToVisibilityConverter"/>

        <LinearGradientBrush x:Key="MonsterHealthUnenraged" EndPoint="1,1" StartPoint="0,1">
            <GradientStop Color="#FF4B8EEE"/>
            <GradientStop Color="#FF10B9DE" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MonsterHealthUnenragedDelayed" Color="#FF9CE4FF"/>

        <LinearGradientBrush x:Key="MonsterHealthEnraged" EndPoint="1,1" StartPoint="0,1">
            <GradientStop Color="#d42c2c"/>
            <GradientStop Color="#e63f29" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MonsterHealthEnragedDelayed" Color="#FFEB6C5B"/>

        <Style x:Key="{x:Type local:BossMonsterPartView}" TargetType="{x:Type local:BossMonsterPartView}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.AutoHideParts.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.AutoHideParts.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Margin="50,10,10,9"
              VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        Margin="10,0,0,0">
                <Image Source="{Binding Crown, Mode=OneWay, Converter={StaticResource CrownToIconConverter}}"
                       d:Source="{StaticResource CROWN_MINI}"
                       Height="15"
                       d:Visibility="Visible"
                       Visibility="{Binding Crown, Converter={StaticResource CrownToVisibilityConverter}}"
                       Width="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BossMonsterView}}}"
                       Margin="0,0,5,0"/>
                <TextBlock Text="{Binding Name, Mode=OneWay}"
                           d:Text="Dodogama"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Left"
                           Foreground="{StaticResource HUNTERPIE_FOREGROUND_PRIMARY}"
                           FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                           FontSize="15">
                </TextBlock>
            </StackPanel>


            <!-- Stamina Bar -->
            <overlay:Bar Height="8"
                     MaxValue="{Binding MaxStamina, Mode=OneWay}"
                     d:MaxValue="100"
                     Value="{Binding Stamina, Mode=OneWay}"
                     d:Value="50"
                     VerticalAlignment="Top" 
                     BorderThickness="2"
                     RenderTransformOrigin="0.5,0.5"
                     Margin="13,47,10,0" ForegroundDelayed="#FFFFCFA8">
                <overlay:Bar.Foreground>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
                        <GradientStop Color="#FFFF9A36" Offset="1"/>
                        <GradientStop Color="#FFFF2E00" Offset="0"/>
                    </LinearGradientBrush>
                </overlay:Bar.Foreground>
                <overlay:Bar.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="-45"/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </overlay:Bar.RenderTransform>
            </overlay:Bar>

            <!-- Health bar -->
            <overlay:Bar Height="15"
                         Foreground="{StaticResource MonsterHealthUnenraged}"
                         ForegroundDelayed="{StaticResource MonsterHealthUnenragedDelayed}"
                         MaxValue="{Binding MaxHealth, Mode=OneWay}"
                         d:MaxValue="100"
                         Value="{Binding Health, Mode=OneWay}"
                         d:Value="50"
                         BorderThickness="2"
                         VerticalAlignment="Top" 
                         RenderTransformOrigin="0.5,0.5"
                         Margin="10,32,10,0">
                <overlay:Bar.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="45"/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </overlay:Bar.RenderTransform>
                <overlay:Bar.Style>
                    <Style TargetType="{x:Type overlay:Bar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnraged}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard >
                                            <animations:BrushAnimation Storyboard.TargetProperty="Foreground"
                                                                       To="{StaticResource MonsterHealthEnraged}"
                                                                       Duration="0:0:0.2"/>
                                            <animations:BrushAnimation Storyboard.TargetProperty="ForegroundDelayed"
                                                                       To="{StaticResource MonsterHealthEnragedDelayed}"
                                                                       Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard >
                                            <animations:BrushAnimation Storyboard.TargetProperty="Foreground"
                                                                       To="{StaticResource MonsterHealthUnenraged}"
                                                                       Duration="0:0:0.2"/>
                                            <animations:BrushAnimation Storyboard.TargetProperty="ForegroundDelayed"
                                                                       To="{StaticResource MonsterHealthUnenragedDelayed}"
                                                                       Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </overlay:Bar.Style>
            </overlay:Bar>
            <TextBlock VerticalAlignment="Top"
                   HorizontalAlignment="Left"
                   Margin="10,15,0,0"
                   Foreground="#FFF3F3F3"
                   FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                   FontWeight="Medium"
                   FontSize="16">
            <Run Text="{Binding Health, Mode=OneWay, StringFormat=\{0:F1\}}"
                 d:Text="25000.0"
                 FontWeight="Normal"/>
            <Run Text="/"/>
            <Run Text="{Binding MaxHealth, Mode=OneWay, StringFormat=\{0:F1\}}"
                 d:Text="25000.0" 
                 FontWeight="Light"
                 Foreground="{StaticResource HUNTERPIE_FOREGROUND_DARK}"/>
            </TextBlock>

            <TextBlock VerticalAlignment="Top"
                   HorizontalAlignment="Right"
                   Margin="0,15,20,0"
                   Foreground="#FFF3F3F3"
                   FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                   FontWeight="Medium">
            <Run Text="{Binding HealthPercentage, Mode=OneWay, StringFormat=\{0:F0\}}"
                 d:Text="90"
                 FontWeight="Normal"
                 FontSize="16"/><!--
         --><Run Text="{Binding HealthPercentage, Mode=OneWay, Converter={StaticResource DoubleToDecimalConverter}, StringFormat={}.{0:D2}%}"
                 d:Text=".63%" 
                 FontWeight="Light"
                 Foreground="#FFB2B2B2"/>
            </TextBlock>
        </Grid>

        <!-- Monster Icon -->
        <Grid Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Margin="20,37,0,0"
              d:Width="40"
              d:Height="40">
            <Rectangle Fill="#FF191A1B"
                       RenderTransformOrigin="0.5,0.5" 
                       Stroke="#FF343434">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="45"/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Image Source="{Binding Em, Mode=OneWay, Converter={StaticResource MonsterEmToIconConverter}, FallbackValue={assets:MonsterIcon em116}}"
                   d:Source="{assets:MonsterIcon em116}"
                   Width="40"
                   RenderOptions.BitmapScalingMode="Fant"/>
        </Grid>

        

        <StackPanel Grid.Row="1"
                    Orientation="Vertical"
                    x:Name="PART_Bottom"
                    Margin="0,90,0,0">
            <!-- Ailments -->

            <ItemsControl ItemsSource="{Binding Ailments, Mode=OneWay, NotifyOnSourceUpdated=True}"
                          VerticalAlignment="Top">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel ItemWidth="60"
                                   HorizontalAlignment="Stretch"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:MonsterAilmentViewModel}">
                        <view:BossMonsterAilmentView Visibility="{Binding IsActive, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Parts -->
            <ItemsControl ItemsSource="{Binding Parts, NotifyOnSourceUpdated=True}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel ItemWidth="200"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:MonsterPartViewModel}">
                        <view:BossMonsterPartView VerticalAlignment="Top"
                                                  HorizontalAlignment="Stretch"
                                                  d:Visibility="Visible"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</UserControl>
